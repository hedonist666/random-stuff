57a58,62
> #ifdef CONFIG_KVM_VMX_PT
> #include "vmx_pt.h"
> static int handle_monitor_trap(struct kvm_vcpu *vcpu);
> #endif
> 
580a586,588
> #ifdef CONFIG_KVM_VMX_PT
> 	struct vcpu_vmx_pt*   vmx_pt_config;
> #endif
1780a1789,1791
> #ifdef CONFIG_KVM_VMX_PT
> 	vmx->vm_entry_controls_shadow = val | 0x20000ULL;	/* Conceal VM entries from Intel PT */
> #else
1781a1793
> #endif
1813a1826,1828
> #ifdef CONFIG_KVM_VMX_PT
> 	vmx->vm_exit_controls_shadow = val | 0x1000000ULL;	/* Conceal VM exit from Intel PT */
> #else
1814a1830
> #endif
1976c1992
< static void add_atomic_switch_msr(struct vcpu_vmx *vmx, unsigned msr,
---
> void add_atomic_switch_msr(struct vcpu_vmx *vmx, unsigned msr,
3772c3788
< 	vmcs_conf->cpu_based_exec_ctrl = _cpu_based_exec_control;
---
> 	vmcs_conf->cpu_based_exec_ctrl = _cpu_based_exec_control | 0x80000;
3774,3775c3790,3791
< 	vmcs_conf->vmexit_ctrl         = _vmexit_control;
< 	vmcs_conf->vmentry_ctrl        = _vmentry_control;
---
> 	vmcs_conf->vmexit_ctrl         = _vmexit_control | 0x1000000;
> 	vmcs_conf->vmentry_ctrl        = _vmentry_control | 0x20000;
9320a9337,9340
> #ifdef CONFIG_KVM_VMX_PT
> 	vmx_pt_vmentry(vmx->vmx_pt_config);
> #endif
> 
9553a9574,9576
> 	#ifdef CONFIG_KVM_VMX_PT
> 		vmx_pt_vmexit(vmx->vmx_pt_config);
> 	#endif
9598a9622,9625
> #ifdef CONFIG_KVM_VMX_PT
> 	/* free vmx_pt */
> 	vmx_pt_destroy(vmx, &(vmx->vmx_pt_config));
> #endif
9680a9708,9712
> #ifdef CONFIG_KVM_VMX_PT
> 	/* enable vmx_pt */
> 	vmx_pt_setup(vmx, &(vmx->vmx_pt_config));
> #endif
> 
12034a12067
> 
12092a12126,12135
> #ifdef CONFIG_KVM_VMX_PT
> static int vmx_pt_setup_fd(struct kvm_vcpu *vcpu){
> 	return vmx_pt_create_fd(to_vmx(vcpu)->vmx_pt_config);
> }
> 
> static int vmx_pt_is_enabled(void){
> 	return vmx_pt_enabled();
> }
> #endif
> 
12222a12266,12271
> 
> #ifdef CONFIG_KVM_VMX_PT
> 	.setup_trace_fd = vmx_pt_setup_fd,
> 	.vmx_pt_enabled = vmx_pt_is_enabled,
> #endif	
> 
12236a12286,12288
> #ifdef CONFIG_KVM_VMX_PT
> 	vmx_pt_init();
> #endif
12246a12299,12301
> #ifdef CONFIG_KVM_VMX_PT
> 	vmx_pt_exit();
> #endif
